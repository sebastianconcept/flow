
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;




    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

server {
    listen 80;
  server_name flow.dev;

  ## Configure here your path to the frontend.
  ## Have in mind that this is for development.
  ## For production you should somehow use the public/ dir with the built output
  root  /c/Users/seb/git/flow/frontend;

  try_files $uri $uri/index.html $uri.html @pharoFlow;

  #map $http_upgrade $connection_upgrade {
  #  default upgrade;
  #  ''      close;
  #}

  location @pharoFlow {
    proxy_pass http://127.0.0.1:3333;
    proxy_http_version 1.1;
    proxy_redirect off;
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    #proxy_set_header   Upgrade          $http_upgrade;
    #proxy_set_header   Connection       $connection_upgrade;
  }

  location @amberFlow  {
    proxy_pass http://127.0.0.1:3000;
    proxy_set_header   Host             $host;
    proxy_set_header   X-Real-IP        $remote_addr;
    proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
    proxy_redirect off;
  }

  location ^~ /src/  {
    error_page 405 = @amberFlow;
    try_files $uri @amberFlow;   
  }

  gzip  on;

}


}


## This is a suggested configuration for using flow based apps with your nginx setup with pretty domains

## OS X? follow this guide (linux should be fine too):
## https://github.com/sebastianconcept/flow/wiki/How-to-setup-your-flow-app-with-pretty-domains-OS-X%3F

## Windows? follow this guide:
## https://github.com/sebastianconcept/flow/wiki/How-to-setup-your-flow-app-with-pretty-domains-Windows%3F

